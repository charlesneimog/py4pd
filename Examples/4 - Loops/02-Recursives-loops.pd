#N canvas 515 -15 619 389 8;
#X obj 4 4 py4pd -lib py4pd;
#X obj 38 122 py.listcomp a[0] - 1200 if a[0] > 7200 else a[0] + 1200 if a[0] < 6000 else a[0] -a 1, f 85;
#X obj 110 216 py.and -a 2;
#X obj 54 166 py> None 6000;
#X obj 162 166 py< None 7200;
#X obj 38 243 py.gate -outn 2;
#X obj 38 308 py.recursive;
#X obj 38 143 t a a a;
#X obj 38 349 s again;
#X obj 10 78 r again;
#X obj 82 59 py.iterate;
#X obj 129 98 s collect;
#X obj 137 243 r collect;
#X obj 110 268 py.collect;
#X obj 110 289 py.print;
#X text 472 121 <= I ask ChatGPT!;
#X msg 82 38 23452 17238 2309 378784 2010;
#X text 91 3 It loads the py4pd Python Library.;
#X text 144 59 The second inlet of py.iterate always must be connected with py.collect. Here we use the [s collect] object to connect boths.;
#X text 106 307 <= Required to avoid pd stack overflow error. Try to connect [py.gate] in [s again] (desconnect py.recursive or pd will crash)., f 79;
#X msg 84 95 24903;
#X text 263 153 [py.listcomp] is a py4pd object where we can use one thing called List Comprehension or simple one line code. In this case \, I asked for ChatGPT...;
#X text 264 201 You can make one line code in Python where it receives one number (here a[0]) \, then check if it is greater than 7200 \, if it is \, it decreases the number for minus 1200 if not it check if the number is small than 6000 \, if it is it adds 1200 If the number is between 6000 and 7200 it returns the number.;
#X connect 1 0 7 0;
#X connect 2 0 5 1;
#X connect 3 0 2 0;
#X connect 4 0 2 1;
#X connect 5 0 6 0;
#X connect 5 1 13 0;
#X connect 6 0 8 0;
#X connect 7 0 5 0;
#X connect 7 1 3 0;
#X connect 7 2 4 0;
#X connect 9 0 1 0;
#X connect 10 0 1 0;
#X connect 10 1 11 0;
#X connect 12 0 13 0;
#X connect 13 0 14 0;
#X connect 16 0 10 0;
#X connect 20 0 1 0;
