name: Deken Upload py4pd version ${{ github.event.inputs.py4pdVersion }}
on:
  workflow_dispatch:
    inputs:
      py4pdVersion:
        description: 'Add the version for upload'
        type: string
        required: true

jobs:  
  # windows-build:
  #   runs-on: windows-latest
  #   timeout-minutes: 15
  #   steps:
  #   - uses: actions/checkout@v3
  #     with:
  #       submodules: recursive
  #       fetch-depth: 0

  #   - uses: actions/setup-python@v4
  #     with:
  #       python-version: '3.10'

  #   - if: runner.os == 'Windows'
  #     name: "Install mingw deps"
  #     uses: msys2/setup-msys2@v2
  #     with:
  #         install: make autoconf automake libtool mingw-w64-x86_64-gcc libtool mingw-w64-x86_64-libwinpthread-git mingw-w64-x86_64-libsystre mingw-w64-x86_64-dlfcn
  #         update: false

  #   - name: Configure Environment
  #     run: |
  #       mkdir py4pd_WIN64
  #       choco install puredata --yes
  #       python -m pip install numpy
  #       python -c "import sysconfig; f = open('pythonincludes.txt', 'w'); print(sysconfig.get_paths()['include'].replace('\\', '/'), file=f); f.close()"
  #       python -c "import os; import sys; f = open('pythonpath.txt', 'w'); print(os.path.dirname(sys.executable).replace('\\', '/'), file=f); f.close()"
  #       python -c "import os; import sys; import numpy.distutils.misc_util as np_utils; f = open('numpyincludes.txt', 'w'); print(np_utils.get_numpy_include_dirs()[0].replace('\\', '/'), file=f); f.close()"
    
  #   - if: runner.os == 'Windows'
  #     name: Build py4pd
  #     shell: msys2 {0}
  #     run: |
  #       make PYTHON_VERSION=python3.10
    
  #   - name: Copy Files and Set for Tests
  #     run: |
  #       mv py4pd.dll py4pd.m_amd64
  #       $pythonpath = Get-Content pythonpath.txt
  #       Copy-Item -Path "$pythonpath\python310.dll" -Destination py4pd_WIN64\ -Recurse
  #       Copy-Item -Path "$pythonpath\python3.dll" -Destination py4pd_WIN64\ -Recurse
  #       mkdir py4pd_WIN64\\src\\
  #       mkdir py4pd_WIN64\\resources\\
  #       cp py4pd.m_amd64 py4pd_WIN64\
  #       cp resources\\py4pd.cfg py4pd_WIN64\
  #       cp resources\\py.py py4pd_WIN64\ 
  #       cp resources\\py4pd-help.pd py4pd_WIN64\         
  #       xcopy src\*.h py4pd_WIN64\src\
  #       xcopy src\*.c py4pd_WIN64\src\
  #       cp -r resources\* py4pd_WIN64\resources\
  #       7z a py4pd_WIN64.zip py4pd_WIN64
  #       cp test\\*.pd py4pd_WIN64\
  #       cp test/runTests.py runTests.py
  #       python3 -m pip install neoscore matplotlib Pillow numpy -t ./py4pd_WIN64/py-modules
  
  #   - name: Run PureData Tests
  #     run: python3 ./runTests.py 
      
  #   - name: Upload Test Image
  #     uses: actions/upload-artifact@v3
  #     with:
  #       name: neoscore-Test-Windows
  #       path: py4pd_WIN64/neoscoretest.png
      
  #   - name: Upload Object ZIP
  #     uses: actions/upload-artifact@v3
  #     with:
  #       name: py4pd_WIN64
  #       path: py4pd_WIN64.zip


  # macos-intel-build:
  #   runs-on: macos-latest
  #   timeout-minutes: 10

  #   steps:
  #   - uses: actions/checkout@v3
  #     with:
  #       submodules: recursive
  #       fetch-depth: 0

  #   - name: set Enviroment
  #     run: |
  #       brew install --cask pd
  #       python3.10 -c 'import sysconfig;print(sysconfig.get_config_var("LINKFORSHARED"))'
  #       python3.10 -m pip install numpy
  #       mkdir py4pd_macOS-Intel

  #   - name: Build
  #     run: make PYTHON_VERSION=python3.10 

  #   - name: Copy files to py4pd_macOS-Intel
  #     run: |
  #       cp py4pd.pd_darwin resources/py4pd.cfg resources/py.py resources/py4pd-help.pd py4pd_macOS-Intel
  #       mkdir py4pd_macOS-Intel/resources
  #       mkdir py4pd_macOS-Intel/src
  #       cp -r resources/* py4pd_macOS-Intel/resources
  #       cp -r src/* py4pd_macOS-Intel/src
  #       zip -r py4pd_macOS-Intel.zip py4pd_macOS-Intel

  #   - name: Upload Object
  #     uses: actions/upload-artifact@v3
  #     with:
  #       name: py4pd_macOS-Intel
  #       path: py4pd_macOS-Intel.zip

  #   - name: Set Test Config
  #     run: |
  #         cp test/*.pd py4pd_macOS-Intel
  #         cp test/runTests.py runTests.py
  #         python3.10 -m pip install matplotlib neoscore matplotlib Pillow -t ./py4pd_macOS-Intel/py-modules

  #   - name: Run Test
  #     run: python3.10 ./runTests.py

  #   - name: Upload Test Image
  #     uses: actions/upload-artifact@v3
  #     with:
  #       name: neoscore-Test-Mac
  #       path: py4pd_macOS-Intel/neoscoretest.png

  linux-build:
    runs-on: ubuntu-latest
    timeout-minutes: 5 
    steps:

      - uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'


      # - name: Install Build Dependencies
      #   run: |
      #     sudo apt-get install puredata -y
      #     sudo apt-get install python3.10-dev -y
      #     python3.10 -m pip install numpy

      # - name: Build
      #   run: make PYTHON_VERSION=python3.10
      

      # - name: Copy files to py4pd_Linux
      #   run: |
      #     mkdir py4pd_Linux
      #     cp py4pd.pd_linux resources/py4pd.cfg resources/py.py resources/py4pd-help.pd py4pd_Linux
      #     mkdir py4pd_Linux/resources
      #     mkdir py4pd_Linux/src
      #     cp resources/* py4pd_Linux/resources -r
      #     cp src/* py4pd_Linux/resources -r
      #     ./resources/localdeps/localdeps.linux.sh py4pd_Linux/py4pd.pd_linux
      #     zip -r py4pd_Linux.zip py4pd_Linux
      #     cp test/*.pd py4pd_Linux
          
      # - name: Upload Object
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: py4pd_Linux
      #     path: py4pd_Linux.zip


      # - name: Set Test Config
      #   run: |
      #     cp test/runTests.py runTests.py
      #     python3.10 -m pip install neoscore matplotlib Pillow -t ./py4pd_Linux/py-modules


      # - name: Run Test
      #   run: python3.10 runTests.py


      # - name: Upload Test Image
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: neoscore-Test-linux
      #     path: py4pd_Linux/neoscoretest.png

      - name: Create Package and Upload to Deken
        # get py4pdVersion input
        # deken package -v ${{ github.event.inputs.py4pdVersion }} py4pd-Object -n py4pd 
        # deken upload py4pd-${{ github.event.inputs.py4pdVersion }}.dek 
	#mkdir py4pd-Object
        #  cp py4pd.pd_linux py4pd-Object/py4pd.pd_linux
        #  cp resources/py4pd-help.pd py4pd-Object/py4pd-help.pd
        #  cp resources/py4pd.cfg py4pd-Object/py4pd.cfg
        #  cp resources/py.py py4pd-Object/py.py
        #  mkdir py4pd-Object/resources
        #  mkdir py4pd-Object/src
        #  cp resources/* py4pd-Object/resources -r
        #  cp src/* py4pd-Object/resources -r
        #  ./resources/localdeps/localdeps.linux.sh py4pd-Object/py4pd.pd_linux
        run: |

          sudo apt-get install --no-install-recommends deken
          mkdir ~/.deken
          python3 -m pip install hy==0.19
          deken -h
          


    

