name: Deken Upload 
on:
  workflow_dispatch:
    inputs:
      py4pdVersion:
        description: 'Add the version for upload'
        type: string
        required: true

jobs:  
  linux-build:
    runs-on: ubuntu-latest
    timeout-minutes: 7
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Build Dependencies
        run: |
          sudo apt-get install puredata -y
          sudo apt-get install python3.10-dev -y
          python3.10 -m pip install numpy

      - name: Build
        run: make PYTHON_VERSION=python3.10
      

      - name: Copy files to py4pd_Linux
        run: |
          mkdir py4pd_Linux
          cp py4pd.pd_linux resources/py4pd.cfg resources/py.py resources/py4pd-help.pd py4pd_Linux
          mkdir py4pd_Linux/resources
          mkdir py4pd_Linux/src
          cp resources/* py4pd_Linux/resources -r
          cp src/* py4pd_Linux/resources -r
          ./resources/localdeps/localdeps.linux.sh py4pd_Linux/py4pd.pd_linux
          zip -r py4pd_Linux.zip py4pd_Linux
          cp test/*.pd py4pd_Linux
                
      - name: Configure Deken
        env:
          DEKEN_PASSWORD: ${{ secrets.DEKEN_PASSWORD }}
          DEKEN_USERNAME: ${{ secrets.DEKEN_USERNAME }}
        run: |
          curl https://raw.githubusercontent.com/pure-data/deken/main/developer/deken > deken
          chmod 755 ./deken
          mkdir ~/.deken
          mkdir py4pd
          mkdir py4pd/src
          mkdir py4pd/resources
          cp py4pd.pd_linux py4pd/py4pd.pd_linux
          cp resources/* py4pd/resources -r
          cp src/* py4pd/src -r
          cp resources/py4pd-help.pd py4pd/py4pd-help.pd
          cp resources/py4pd.cfg py4pd/py4pd.cfg
          cp resources/py.py py4pd/py.py
          ./resources/localdeps/localdeps.linux.sh py4pd/py4pd.pd_linux
          rm py4pd/amd64/libpython3.10.so.1.0
          python3 -m venv ~/.deken/virtualenv/
          source ~/.deken/virtualenv/bin/activate
          python3 -m pip install hy==0.19
          ./deken upgrade --self
          ./deken package py4pd -v ${{ github.event.inputs.py4pdVersion }} -n py4pd 
          echo username=${{ secrets.DEKEN_USERNAME }} > ~/.deken/config
          echo password=${{ secrets.DEKEN_PASSWORD }} >> ~/.deken/config
          ./deken upload *.dek
        continue-on-error: true

      - name: Upload Deken
        env:
          DEKEN_PASSWORD: ${{ secrets.DEKEN_PASSWORD }}
          DEKEN_USERNAME: ${{ secrets.DEKEN_USERNAME }}
        run: |
          source ~/.deken/virtualenv/bin/activate
          echo username=${{ secrets.DEKEN_USERNAME }} > ~/.deken/config
          echo password=${{ secrets.DEKEN_PASSWORD }} >> ~/.deken/config
          ./deken upload *.dek


  windows-build:
    runs-on: windows-latest
    timeout-minutes: 15
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
        fetch-depth: 0

    - uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - if: runner.os == 'Windows'
      name: "Install mingw deps"
      uses: msys2/setup-msys2@v2
      with:
          install: make autoconf automake libtool mingw-w64-x86_64-gcc libtool mingw-w64-x86_64-libwinpthread-git mingw-w64-x86_64-libsystre mingw-w64-x86_64-dlfcn unzip
          update: false

    - name: Configure Environment
      run: |
        mkdir py4pd_WIN64
        choco install puredata --yes
        python -m pip install numpy
        python -c "import sysconfig; f = open('pythonincludes.txt', 'w'); print(sysconfig.get_paths()['include'].replace('\\', '/'), file=f); f.close()"
        python -c "import os; import sys; f = open('pythonpath.txt', 'w'); print(os.path.dirname(sys.executable).replace('\\', '/'), file=f); f.close()"
        python -c "import os; import sys; import numpy.distutils.misc_util as np_utils; f = open('numpyincludes.txt', 'w'); print(np_utils.get_numpy_include_dirs()[0].replace('\\', '/'), file=f); f.close()"
    
    - if: runner.os == 'Windows'
      name: Build py4pd
      shell: msys2 {0}
      run: |
        make PYTHON_VERSION=python3.10
    
    - name: Create Object Folder
      run: |
        mv py4pd.dll py4pd.m_amd64
        $pythonpath = Get-Content pythonpath.txt
        Copy-Item -Path "$pythonpath\python310.dll" -Destination py4pd_WIN64\ -Recurse
        Copy-Item -Path "$pythonpath\python3.dll" -Destination py4pd_WIN64\ -Recurse
        mkdir py4pd_WIN64\\src\\
        mkdir py4pd_WIN64\\resources\\
        cp py4pd.m_amd64 py4pd_WIN64\
        cp resources\\py4pd.cfg py4pd_WIN64\
        cp resources\\py.py py4pd_WIN64\ 
        cp resources\\py4pd-help.pd py4pd_WIN64\         
        xcopy src\*.h py4pd_WIN64\src\
        xcopy src\*.c py4pd_WIN64\src\
        cp -r resources\* py4pd_WIN64\resources\
      
    - if: runner.os == 'Windows'
      name: Build py4pd
      env:
        DEKEN_PASSWORD: ${{ secrets.DEKEN_PASSWORD }}
        DEKEN_USERNAME: ${{ secrets.DEKEN_USERNAME }}
      shell: msys2 {0}
      run: |
        mkdir ~/.deken
        echo username=${{ secrets.DEKEN_USERNAME }} > ~/.deken/config
        echo password=${{ secrets.DEKEN_PASSWORD }} >> ~/.deken/config
        wget https://github.com/pure-data/deken/releases/download/v0.9.2/deken_Windows64.zip
        unzip deken_Windows64.zip
        echo username=${{ secrets.DEKEN_USERNAME }} > ~/.deken/config
        echo password=${{ secrets.DEKEN_PASSWORD }} >> ~/.deken/config
        ./deken package py4pd_WIN64 -v ${{ github.event.inputs.py4pdVersion }} -n py4pd
        ./deken upload *.dek

    
  macos-intel-build:
    runs-on: macos-latest
    timeout-minutes: 10

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
        fetch-depth: 0

    - name: set Enviroment
      run: |
        brew install --cask pd
        python3.10 -c 'import sysconfig;print(sysconfig.get_config_var("LINKFORSHARED"))'
        python3.10 -m pip install numpy
        mkdir py4pd_macOS-Intel

    - name: Build
      run: make PYTHON_VERSION=python3.10 

    - name: Copy files to py4pd_macOS-Intel
      run: |
        cp py4pd.pd_darwin resources/py4pd.cfg resources/py.py resources/py4pd-help.pd py4pd_macOS-Intel
        mkdir py4pd_macOS-Intel/resources
        mkdir py4pd_macOS-Intel/src
        cp -r resources/* py4pd_macOS-Intel/resources
        cp -r src/* py4pd_macOS-Intel/src
        zip -r py4pd_macOS-Intel.zip py4pd_macOS-Intel

    - name: Upload Deken
      env:
        DEKEN_PASSWORD: ${{ secrets.DEKEN_PASSWORD }}
        DEKEN_USERNAME: ${{ secrets.DEKEN_USERNAME }}
      run: |
        wget https://github.com/pure-data/deken/releases/download/v0.9.2/deken_macOS.zip -O deken_macOS.zip
        unzip deken_macOS.zip
        mkdir ~/.deken
        echo username=${{ secrets.DEKEN_USERNAME }} > ~/.deken/config
        echo password=${{ secrets.DEKEN_PASSWORD }} >> ~/.deken/config
        ./deken package py4pd_macOS-Intel -v ${{ github.event.inputs.py4pdVersion }} -n py4pd
        ./deken upload *.dek
