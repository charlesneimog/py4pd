#N canvas 570 73 1153 768 12;
#X declare -path else;
#X obj 165 86 hsl 128 15 0 127 0 0 empty empty empty -2 -8 0 10 #fcfcfc #000000 #000000 0 1;
#X msg 22 251 home, f 7;
#X obj 21 471 py4pd;
#X obj 22 376 s py4pd;
#X msg 43 335 packages, f 10;
#X obj 21 436 r py4pd;
#X text 130 334 See where is the packages path!;
#X text 85 250 See where is the home path!;
#X obj 16 128 s py4pd;
#N canvas 1022 602 627 287 modules 0;
#X obj 17 171 s py4pd;
#X msg 78 110 pip_install;
#X msg 17 15 set modules randint;
#X msg 38 47 run 1 4;
#X msg 70 80 doc;
#X text 234 20 In modules.py I just use the 'from random import *' Using that you will be able to use all python func- tions of diferrent modules inside PureData.;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 3 0 0 0;
#X connect 4 0 0 0;
#X restore 320 38 pd modules;
#X obj 162 134 s py4pd;
#X msg 162 105 run \$1 10, f 10;
#X obj 162 15 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000 0 1;
#X obj 162 61 random 100;
#X msg 45 289 home /home/neimog/Downloads/py4pd/scripts, f 42;
#N canvas 140 568 637 300 coding 0;
#X obj 27 205 s py4pd;
#X msg 48 57 vscode, f 8;
#X msg 67 90 reload, f 8;
#X msg 94 128 create om, f 11;
#X msg 28 21 doc, f 6;
#X text 83 20 Shows the doc of the function!;
#X text 118 56 Open vscode if it is in the PATH!;
#X text 135 89 Reload the function \, if you change it you need to reload!;
#X text 170 128 If you want to create a new script \, you can run create \, if the files already exits it will not replace it \, just open it.;
#N canvas 0 50 450 250 (subpatch) 0;
#X text 0 0 plugdatainfo <?xml version="1.0" encoding="UTF-8"?> <PlugDataInfo/>;
#X coords 0 1 100 -1 1 1 1;
#X restore 0 0 graph;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 3 0 0 0;
#X connect 4 0 0 0;
#X restore 320 15 pd coding;
#X text 393 15 Coding with py4pd;
#N canvas 881 301 594 470 thread 0;
#X msg 17 87 thread \$1, f 10;
#X obj 17 62 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000 0 1;
#X text 32 59 on/off;
#X obj 371 46 loadbang;
#X obj 291 153 *~;
#X msg 371 111 0.3, f 5;
#X obj 291 114 osc~;
#X obj 290 222 dac~;
#X msg 291 88 200, f 6;
#X msg 99 88 run, f 5;
#N canvas 0 50 450 300 (subpatch) 0;
#X obj 463 165 namecanvas \$0-canvas, f 21;
#X obj 42 27 inlet;
#N canvas 986 257 514 438 not-fixed 0;
#X obj 83 43 inlet;
#X obj 262 217 + 2;
#X obj 83 246 pack symbol \$0 float float;
#N canvas 1104 252 423 423 width 0;
#X obj 135 266 * 7;
#X obj 135 292 + 5;
#X obj 68 37 inlet;
#X msg 68 129 1;
#X obj 68 98 route bang;
#X obj 135 241 change;
#X obj 135 334 outlet;
#X obj 68 69 list fromsymbol;
#N canvas 505 89 565 416 size 0;
#X msg 129 180 0;
#X obj 109 229 v c_\$0;
#N canvas 374 495 450 300 iter 0;
#X obj 125 61 inlet;
#X obj 91 125 until;
#X obj 104 208 list store;
#X obj 125 92 t b b l;
#X obj 91 150 f;
#X obj 129 151 + 1;
#X msg 148 125 0, f 2;
#X msg 91 181 get \$1 1;
#X obj 104 237 outlet;
#X connect 0 0 3 0;
#X connect 1 0 4 0;
#X connect 2 0 8 0;
#X connect 2 1 1 1;
#X connect 3 0 1 0;
#X connect 3 1 6 0;
#X connect 3 2 2 1;
#X connect 4 0 5 0;
#X connect 4 0 7 0;
#X connect 5 0 4 1;
#X connect 6 0 4 1;
#X connect 7 0 2 0;
#X restore 184 180 pd iter;
#X obj 109 270 outlet;
#X obj 109 77 inlet;
#X obj 184 213 expr c_\$0 = (c_\$0 + ($f1 < 128 || $f1 > 191));
#X obj 109 123 trigger bang list bang;
#X connect 0 0 1 0;
#X connect 1 0 3 0;
#X connect 2 0 5 0;
#X connect 4 0 6 0;
#X connect 6 0 1 0;
#X connect 6 1 2 0;
#X connect 6 2 0 0;
#X restore 135 183 pd size;
#X connect 0 0 1 0;
#X connect 1 0 6 0;
#X connect 2 0 7 0;
#X connect 3 0 8 0;
#X connect 4 0 3 0;
#X connect 4 1 8 0;
#X connect 5 0 0 0;
#X connect 7 0 4 0;
#X connect 8 0 5 0;
#X restore 227 189 pd width;
#X obj 83 157 trigger symbol symbol;
#X obj 107 101 s \$0-message;
#X obj 108 129 r \$0-resize-unfixed;
#X msg 83 333 \; \$2-display label \$1 \, vis_size \$3 20 \; \$2-canvas coords 0 1 1 -1 \$4 22 2 100 100 1;
#X connect 0 0 4 0;
#X connect 0 0 5 0;
#X connect 1 0 2 3;
#X connect 2 0 7 0;
#X connect 3 0 2 2;
#X connect 3 0 1 0;
#X connect 4 0 2 0;
#X connect 4 1 3 0;
#X connect 6 0 4 0;
#X restore 146 260 pd not-fixed;
#N canvas 388 150 305 320 fixed 0;
#X obj 89 39 inlet;
#X obj 151 133 r \$0-size;
#X obj 113 79 s \$0-message;
#X obj 114 106 r \$0-resize-fixed;
#N canvas 716 202 700 705 resize 0;
#X obj 112 158 list fromsymbol;
#X msg 290 147 0;
#X obj 297 236 v i_\$0;
#X obj 312 211 v c_\$0;
#X obj 392 460 list split;
#X obj 112 206 trigger list list bang;
#X obj 392 500 list tosymbol;
#X obj 187 317 select 1;
#X obj 320 182 v cut_\$0;
#N canvas 374 495 450 300 iter 0;
#X obj 125 61 inlet;
#X obj 91 125 until;
#X obj 104 208 list store;
#X obj 125 92 t b b l;
#X obj 91 150 f;
#X obj 129 151 + 1;
#X msg 148 125 0, f 2;
#X msg 91 181 get \$1 1;
#X obj 104 237 outlet;
#X obj 209 61 inlet;
#X connect 0 0 3 0;
#X connect 1 0 4 0;
#X connect 2 0 8 0;
#X connect 2 1 1 1;
#X connect 3 0 1 0;
#X connect 3 1 6 0;
#X connect 3 2 2 1;
#X connect 4 0 5 0;
#X connect 4 0 7 0;
#X connect 5 0 4 1;
#X connect 6 0 4 1;
#X connect 7 0 2 0;
#X connect 9 0 1 1;
#X restore 187 239 pd iter;
#X obj 187 354 float;
#X obj 111 504 list tosymbol;
#X obj 187 380 v cut_\$0;
#X obj 112 424 t l b;
#X obj 459 429 - 1;
#X obj 392 593 outlet;
#X obj 597 76 inlet;
#X obj 187 272 expr (c_\$0 = (c_\$0 + ($f1 < 128 || $f1 > 191))) == $f2 + 1 \; i_\$0 = i_\$0 + 1;
#X obj 113 76 inlet;
#X obj 187 434 != 0;
#X obj 112 463 else/router;
#X connect 0 0 5 0;
#X connect 1 0 2 0;
#X connect 1 0 3 0;
#X connect 1 0 8 0;
#X connect 4 0 6 0;
#X connect 5 0 13 0;
#X connect 5 1 9 0;
#X connect 5 2 1 0;
#X connect 6 0 15 0;
#X connect 7 0 9 1;
#X connect 7 0 10 0;
#X connect 9 0 17 0;
#X connect 10 0 12 0;
#X connect 11 0 15 0;
#X connect 12 0 14 0;
#X connect 12 0 19 0;
#X connect 13 0 20 0;
#X connect 13 1 12 0;
#X connect 14 0 4 1;
#X connect 16 0 17 1;
#X connect 17 0 7 0;
#X connect 17 1 10 1;
#X connect 18 0 0 0;
#X connect 19 0 20 1;
#X connect 20 0 11 0;
#X connect 20 1 4 0;
#X restore 91 197 pd resize;
#X obj 91 258 s \$0-display;
#X msg 91 230 label \$1;
#X connect 0 0 2 0;
#X connect 0 0 4 0;
#X connect 1 0 4 1;
#X connect 3 0 4 0;
#X connect 4 0 6 0;
#X connect 6 0 5 0;
#X restore 220 230 pd fixed;
#X obj 42 305 outlet;
#X text 382 249 Part of ELSE \; https://github.com/porres/pd-else;
#X text 380 228 Alexandre Torres Porres (2017-2018);
#N canvas 185 381 450 300 \$0-cnv 0;
#X obj 101 101 cnv 10 12 20 empty 1003-display empty 2 10 0 12 #e0e0e0 #404040 0;
#X coords 0 1 1 -1 14 22 2 100 100;
#X restore 100 100 pd \$0-cnv;
#X obj 100 101 cnv 1 6 4 empty empty empty 20 12 0 14 #000000 #404040 0;
#X obj 100 120 cnv 1 6 4 empty empty empty 20 12 0 14 #000000 #404040 0;
#N canvas 673 182 374 528 get-symbol 0;
#X obj 21 89 r \$0-bang;
#X obj 59 184 symbol;
#X obj 59 387 trigger bang symbol;
#N canvas 211 416 456 281 selector 0;
#X obj 98 96 t b s;
#X obj 98 21 inlet;
#X obj 319 207 outlet;
#N canvas 396 174 376 521 list 0;
#X obj 165 394 list prepend list;
#X msg 125 255 \$1;
#X obj 125 287 route float;
#X obj 91 367 list;
#X obj 125 311 b;
#X obj 164 368 list;
#X obj 198 312 b;
#X obj 58 308 t l l;
#X obj 45 21 inlet;
#X obj 145 435 outlet;
#X obj 303 203 list;
#X obj 45 98 list length;
#X obj 45 122 == 1;
#X obj 45 149 sel 0 1;
#X obj 94 192 list;
#X obj 45 68 trigger list list;
#X obj 303 435 outlet;
#X connect 0 0 9 0;
#X connect 1 0 2 0;
#X connect 2 0 4 0;
#X connect 2 1 6 0;
#X connect 3 0 9 0;
#X connect 4 0 3 0;
#X connect 5 0 0 0;
#X connect 6 0 5 0;
#X connect 7 0 1 0;
#X connect 7 1 3 1;
#X connect 7 1 5 1;
#X connect 8 0 15 0;
#X connect 10 0 16 0;
#X connect 11 0 12 0;
#X connect 12 0 13 0;
#X connect 13 0 14 0;
#X connect 13 1 10 0;
#X connect 14 0 7 0;
#X connect 15 0 11 0;
#X connect 15 1 10 1;
#X connect 15 1 14 1;
#X restore 171 122 pd list;
#X obj 42 138 pack symbol s;
#N canvas 64 23 472 563 check 0;
#X obj 134 41 inlet;
#X obj 142 464 outlet;
#X obj 104 120 expr isnan($f1);
#X obj 104 161 sel 1 0;
#X msg 105 205 nan;
#X obj 142 270 sel 1 0;
#X msg 142 320 -inf;
#X obj 134 83 trigger float float;
#X obj 196 331 expr isinf($f1) && $f1 > 0, f 15;
#X msg 196 403 inf;
#X obj 196 371 sel 1 0;
#X obj 142 226 expr isinf($f1) && $f1 < 0, f 15;
#X obj 263 109 v f_\$0;
#X obj 142 195 v f_\$0;
#X obj 196 303 v f_\$0;
#X obj 235 406 v f_\$0;
#X connect 0 0 7 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 3 1 13 0;
#X connect 4 0 1 0;
#X connect 5 0 6 0;
#X connect 5 1 14 0;
#X connect 6 0 1 0;
#X connect 7 0 2 0;
#X connect 7 1 12 0;
#X connect 8 0 10 0;
#X connect 9 0 1 0;
#X connect 10 0 9 0;
#X connect 10 1 15 0;
#X connect 11 0 5 0;
#X connect 13 0 11 0;
#X connect 14 0 8 0;
#X connect 15 0 1 0;
#X restore 236 108 pd check;
#X obj 309 91 b;
#X msg 310 117 symbol (gpointer);
#X obj 98 58 else/routetype symbol list float pointer;
#X connect 0 0 4 0;
#X connect 0 1 4 1;
#X connect 1 0 8 0;
#X connect 3 0 2 0;
#X connect 3 1 2 0;
#X connect 4 0 2 0;
#X connect 5 0 2 0;
#X connect 6 0 7 0;
#X connect 7 0 2 0;
#X connect 8 0 0 0;
#X connect 8 1 3 0;
#X connect 8 2 5 0;
#X connect 8 3 6 0;
#X connect 8 4 2 0;
#X restore 98 69 pd selector;
#X msg 242 287 1;
#X obj 225 341 &&;
#X obj 140 240 t b b;
#X msg 172 300 1;
#X msg 209 287 0;
#X obj 225 398 sel 1;
#X obj 98 22 inlet;
#X obj 189 447 outlet;
#X obj 59 447 outlet;
#X obj 59 239 t s b;
#X obj 98 157 trigger symbol bang;
#X obj 98 96 else/any2symbol;
#X obj 98 129 else/dollsym 1;
#X obj 59 212 else/changed;
#X connect 0 0 1 0;
#X connect 1 0 17 0;
#X connect 2 0 12 0;
#X connect 2 1 11 0;
#X connect 3 0 15 0;
#X connect 4 0 5 1;
#X connect 5 0 9 0;
#X connect 6 0 8 0;
#X connect 6 1 7 0;
#X connect 7 0 5 0;
#X connect 8 0 5 1;
#X connect 9 0 12 0;
#X connect 10 0 3 0;
#X connect 13 0 2 0;
#X connect 13 1 8 0;
#X connect 14 0 1 1;
#X connect 14 1 4 0;
#X connect 15 0 16 0;
#X connect 16 0 14 0;
#X connect 17 0 13 0;
#X connect 17 1 6 0;
#X restore 58 161 pd get-symbol;
#N canvas 515 44 535 505 blink 0;
#N canvas 568 74 712 637 off 0;
#X obj 490 220 * -1;
#X obj 424 300 +;
#X obj 409 325 +;
#X obj 347 219 * -65536;
#X obj 424 220 * -256;
#X obj 409 356 - 1;
#X obj 390 189 unpack f f f;
#X obj 225 295 +;
#X obj 210 320 +;
#X obj 148 214 * -65536;
#X obj 225 215 * -256;
#X obj 291 215 * -1;
#X obj 210 351 - 1;
#X obj 191 184 unpack f f f;
#X obj 379 423 pack;
#X obj 238 121 t b b;
#X obj 238 81 inlet;
#X obj 378 485 outlet;
#X msg 203 154 224 224 224;
#X msg 395 152 64 64 64;
#X msg 378 447 color \$1 0 \$2;
#X connect 0 0 1 1;
#X connect 1 0 2 1;
#X connect 2 0 5 0;
#X connect 3 0 2 0;
#X connect 4 0 1 0;
#X connect 5 0 14 1;
#X connect 6 0 3 0;
#X connect 6 1 4 0;
#X connect 6 2 0 0;
#X connect 7 0 8 1;
#X connect 8 0 12 0;
#X connect 9 0 8 0;
#X connect 10 0 7 0;
#X connect 11 0 7 1;
#X connect 12 0 14 0;
#X connect 13 0 9 0;
#X connect 13 1 10 0;
#X connect 13 2 11 0;
#X connect 14 0 20 0;
#X connect 15 0 18 0;
#X connect 15 1 19 0;
#X connect 16 0 15 0;
#X connect 18 0 13 0;
#X connect 19 0 6 0;
#X connect 20 0 17 0;
#X restore 211 405 pd off;
#X obj 211 372 select 0 1;
#X obj 211 340 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000 0 1;
#X msg 270 405 color -4.86997e+06 -1.34937e+07 0;
#X obj 270 450 s \$0-display;
#X obj 211 308 delay 50;
#X obj 102 226 f;
#X obj 70 37 inlet;
#X obj 78 260 select 0;
#X obj 102 147 spigot;
#X obj 70 80 t b b;
#X msg 141 118 1;
#X obj 102 190 del 150;
#X connect 0 0 4 0;
#X connect 1 0 0 0;
#X connect 1 1 3 0;
#X connect 2 0 1 0;
#X connect 2 0 6 1;
#X connect 3 0 4 0;
#X connect 5 0 2 0;
#X connect 6 0 8 0;
#X connect 7 0 10 0;
#X connect 8 0 2 0;
#X connect 8 0 5 0;
#X connect 9 0 12 0;
#X connect 10 0 11 0;
#X connect 10 1 9 0;
#X connect 11 0 9 1;
#X connect 12 0 6 0;
#X restore 58 193 pd blink;
#N canvas 859 181 854 657 init 0;
#X obj 269 577 s \$0-size;
#X msg 205 472 1, f 2;
#X msg 389 440 1, f 2;
#X obj 281 543 s \$0-fixed;
#X msg 233 472 0, f 2;
#N canvas 846 532 463 403 resize 0;
#X obj 170 256 s \$0-display;
#X obj 170 135 * 7;
#X msg 170 226 vis_size \$1 20;
#X obj 170 161 + 5;
#X obj 119 355 send \$0-canvas;
#X obj 119 241 + 2;
#X msg 119 293 coords 0 1 1 -1 \$1 22 2 100 100 1;
#X obj 170 65 inlet;
#X obj 182 198 s \$0-width;
#X connect 1 0 3 0;
#X connect 2 0 0 0;
#X connect 3 0 2 0;
#X connect 3 0 5 0;
#X connect 3 0 8 0;
#X connect 5 0 6 0;
#X connect 6 0 4 0;
#X connect 7 0 1 0;
#X restore 249 605 pd resize;
#X obj 106 406 t b b;
#X obj 193 256 unpack;
#X obj 76 606 s \$0-bang;
#X obj 108 519 max 1;
#X obj 165 117 r \$0-args;
#X obj 223 350 moses 1;
#X obj 223 326 int;
#X msg 223 385 0, f 2;
#X obj 282 440 s \$0-arg-size;
#X msg 96 452 100;
#X obj 76 570 metro;
#X obj 119 546 s \$0-arg-rate;
#X obj 123 572 r \$0-set-rate;
#X obj 387 185 symbol;
#X obj 387 148 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 507 224 s pd-\$0-cnv;
#X msg 507 199 clear;
#X msg 387 261 \; pd-\$2-cnv clear \, obj 101 101 cnv 10 12 20 empty \$2-display \$1 2 10 0 12 -233017 -66577 0 \, coords 0 1 1 -1 14 22 2 100 100 1 \; \$2-canvas coords 0 1 1 -1 14 22 2 100 100 1;
#X obj 387 219 pack symbol \$0;
#X obj 268 388 t f b;
#X obj 95 272 t b f;
#X obj 147 184 route bang float list;
#X obj 68 80 trigger bang bang bang;
#X obj 147 146 else/args;
#X obj 68 43 else/lb;
#X connect 1 0 5 0;
#X connect 2 0 3 0;
#X connect 4 0 3 0;
#X connect 6 0 1 0;
#X connect 6 1 4 0;
#X connect 6 1 15 0;
#X connect 7 0 12 0;
#X connect 7 1 9 0;
#X connect 9 0 16 1;
#X connect 9 0 17 0;
#X connect 10 0 29 0;
#X connect 11 0 6 0;
#X connect 11 0 13 0;
#X connect 11 1 25 0;
#X connect 12 0 11 0;
#X connect 13 0 14 0;
#X connect 15 0 9 0;
#X connect 16 0 8 0;
#X connect 18 0 16 1;
#X connect 19 0 24 0;
#X connect 20 0 19 0;
#X connect 22 0 21 0;
#X connect 24 0 23 0;
#X connect 25 0 14 0;
#X connect 25 0 0 0;
#X connect 25 0 5 0;
#X connect 25 1 2 0;
#X connect 26 0 15 0;
#X connect 26 1 12 0;
#X connect 27 0 6 0;
#X connect 27 1 26 0;
#X connect 27 2 7 0;
#X connect 28 0 16 0;
#X connect 28 1 29 0;
#X connect 28 2 19 0;
#X connect 29 0 27 0;
#X connect 30 0 28 0;
#X restore 379 165 pd init;
#X obj 220 166 r \$0-fixed;
#X obj 146 201 else/router;
#X obj 423 196 declare -path else;
#N canvas 0 50 450 250 (subpatch) 0;
#X text 0 0 plugdatainfo;
#X coords 0 1 100 -1 1 1 1;
#X restore 0 0 graph;
#X connect 1 0 4 0;
#X connect 1 0 10 0;
#X connect 10 0 11 0;
#X connect 10 1 14 0;
#X connect 13 0 14 1;
#X connect 14 0 2 0;
#X connect 14 1 3 0;
#X coords 0 1 1 -1 14 22 2 100 100;
#X restore 17 231 pd;
#X msg 447 85 \; pd dsp \$1, f 11;
#X obj 447 46 tgl 30 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000 0 1;
#X obj 17 195 else/symbol2any;
#X msg 145 87 set py thread_test;
#X obj 17 128 py4pd;
#X text 17 280 1 Set the function thread_test \; 2 Then turn on the dsp and thread mode \; 3 It will just output the hour 5s after you press run \; For python scripts that need some time to execute \, the thread mode will allow do not stop the PD process to run. This means that py4pd will not interrupt the audio signal. Try to run the same function with the thread mode off. Wait 5 seconds! Pd do not stop to work \, just is wait the python script finish his work!;
#X obj 17 8 loadbang;
#X msg 17 32 1, f 5;
#N canvas 0 50 450 250 (subpatch) 0;
#X text 0 0 plugdatainfo <?xml version="1.0" encoding="UTF-8"?> <PlugDataInfo/>;
#X coords 0 1 100 -1 1 1 1;
#X restore 0 0 graph;
#X obj 89 164 print;
#X connect 0 0 15 0;
#X connect 1 0 0 0;
#X connect 3 0 5 0;
#X connect 3 0 8 0;
#X connect 4 0 7 0;
#X connect 4 0 7 1;
#X connect 5 0 4 1;
#X connect 6 0 4 0;
#X connect 8 0 6 0;
#X connect 9 0 15 0;
#X connect 12 0 11 0;
#X connect 13 0 10 0;
#X connect 14 0 15 0;
#X connect 15 0 13 0;
#X connect 15 0 20 0;
#X connect 17 0 18 0;
#X connect 18 0 1 0;
#X restore 321 62 pd thread;
#X text 390 61 Documentation about thread with python!;
#X msg 26 47 run, f 5;
#X obj 21 508 s py4pd_answer;
#X text 95 470 Here the Object!;
#X obj 148 508 print py4pd_answer;
#X msg 16 17 set py sum, f 12;
#X text 79 377 Enviroment Name - Always lib - Always site-packages;
#X text 356 290 Define home Path! 'Where py4pd look for scripts.py';
#X msg 76 46 doc, f 6;
#X obj 162 39 metro 100;
#N canvas 460 555 839 327 embedded 0;
#X obj 39 164 py4pd;
#X msg 39 30 set py pd_output;
#X msg 97 102 run;
#X msg 137 103 reload;
#X obj 575 37 loadbang;
#X obj 495 105 osc~;
#X obj 494 190 dac~;
#X msg 495 79 200;
#X msg 645 76 \; pd dsp \$1;
#X obj 645 38 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000 0 1;
#X msg 39 188 set \$1;
#X msg 39 212 9;
#X text 92 163 This is more a thing for developers and Python users.;
#X text 36 270 With this you can send values for pd without return \, this seems to be very useful for work with list of lists. And other things;
#X obj 38 241 print pd.out;
#X msg 52 54 set py pd_message;
#X msg 67 77 set py pd_error;
#X msg 200 104 thread \$1;
#X obj 200 72 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000 0 1;
#X msg 575 102 0.0003;
#X obj 495 145 *~ 0.002;
#X msg 274 104 sound \$1;
#X obj 274 74 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000 0 1;
#X connect 0 0 10 0;
#X connect 0 0 14 0;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 3 0 0 0;
#X connect 4 0 19 0;
#X connect 4 0 7 0;
#X connect 5 0 20 0;
#X connect 7 0 5 0;
#X connect 9 0 8 0;
#X connect 10 0 11 0;
#X connect 15 0 0 0;
#X connect 16 0 0 0;
#X connect 17 0 0 0;
#X connect 18 0 17 0;
#X connect 19 0 20 1;
#X connect 20 0 6 0;
#X connect 20 0 6 1;
#X connect 21 0 0 0;
#X connect 22 0 21 0;
#X restore 320 86 pd embedded module;
#N canvas 0 50 450 250 (subpatch) 0;
#X text 0 0 plugdatainfo <?xml version="1.0" encoding="UTF-8"?> <PlugDataInfo/>;
#X coords 0 1 100 -1 1 1 1;
#X restore 0 0 graph;
#N canvas 881 301 934 596 debug 0;
#X msg 17 87 thread \$1, f 10;
#X obj 17 62 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000 0 1;
#X text 32 59 on/off;
#X msg 99 88 run, f 5;
#X msg 145 87 set py thread_test;
#X obj 17 128 py4pd;
#X text 17 280 1 Set the function thread_test \; 2 Then turn on the dsp and thread mode \; 3 It will just output the hour 5s after you press run \; For python scripts that need some time to execute \, the thread mode will allow do not stop the PD process to run. This means that py4pd will not interrupt the audio signal. Try to run the same function with the thread mode off. Wait 5 seconds! Pd do not stop to work \, just is wait the python script finish his work!;
#X obj 17 8 loadbang;
#X msg 17 32 1, f 5;
#N canvas 0 50 450 250 (subpatch) 0;
#X text 0 0 plugdatainfo <?xml version="1.0" encoding="UTF-8"?> <PlugDataInfo/>;
#X coords 0 1 100 -1 1 1 1;
#X restore 0 0 graph;
#X msg 309 86 thread \$1, f 10;
#X obj 309 61 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000 0 1;
#X text 324 58 on/off;
#X msg 391 87 run, f 5;
#X msg 437 86 set py thread_test;
#X obj 309 127 py4pd;
#X obj 309 7 loadbang;
#X msg 309 31 1, f 5;
#X obj 17 164 print thread-1;
#X obj 309 211 print thread-2;
#X obj 180 30 bng 19 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 309 161 cyclone/fromsymbol;
#X connect 0 0 5 0;
#X connect 1 0 0 0;
#X connect 3 0 5 0;
#X connect 4 0 5 0;
#X connect 5 0 18 0;
#X connect 7 0 8 0;
#X connect 8 0 1 0;
#X connect 10 0 15 0;
#X connect 11 0 10 0;
#X connect 13 0 15 0;
#X connect 14 0 15 0;
#X connect 15 0 21 0;
#X connect 16 0 17 0;
#X connect 17 0 11 0;
#X connect 20 0 3 0;
#X connect 20 0 13 0;
#X connect 21 0 19 0;
#X restore 320 114 pd debug thread;
#X msg 91 95 dll;
#X obj 533 420 py4pd;
#X obj 533 445 print;
#X msg 552 370 run;
#X msg 511 338 set py whereFiles;
#N canvas 881 301 934 596 Lists 1;
#X obj 17 128 py4pd;
#X text 17 280 1 Set the function thread_test \; 2 Then turn on the dsp and thread mode \; 3 It will just output the hour 5s after you press run \; For python scripts that need some time to execute \, the thread mode will allow do not stop the PD process to run. This means that py4pd will not interrupt the audio signal. Try to run the same function with the thread mode off. Wait 5 seconds! Pd do not stop to work \, just is wait the python script finish his work!;
#N canvas 0 50 450 250 (subpatch) 0;
#X text 0 0 plugdatainfo <?xml version="1.0" encoding="UTF-8"?> <PlugDataInfo/>;
#X coords 0 1 100 -1 1 1 1;
#X restore 0 0 graph;
#X obj 17 164 print thread-1;
#X msg 117 63 set py sumlist;
#X msg 17 70 runlist;
#X connect 0 0 3 0;
#X connect 4 0 0 0;
#X connect 5 0 0 0;
#X restore 320 146 pd Lists;
#X connect 0 0 11 0;
#X connect 1 0 3 0;
#X connect 2 0 20 0;
#X connect 2 0 22 0;
#X connect 4 0 3 0;
#X connect 5 0 2 0;
#X connect 11 0 10 0;
#X connect 12 0 27 0;
#X connect 13 0 0 0;
#X connect 14 0 3 0;
#X connect 19 0 8 0;
#X connect 23 0 8 0;
#X connect 26 0 8 0;
#X connect 27 0 13 0;
#X connect 31 0 8 0;
#X connect 32 0 33 0;
#X connect 34 0 32 0;
#X connect 35 0 32 0;
