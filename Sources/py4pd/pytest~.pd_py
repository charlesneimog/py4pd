import puredata as pd
import math


class pytest_tilde(pd.NewObject):  # <== Class name is not important
    name: str = "pytest~"  # <== Object name, same as {name}.pd_py

    def __init__(self, args):
        self.inlets = pd.SIGNAL
        self.outlets = pd.SIGNAL
        self.phase = 0

    def perform(self, input):
        blocksize = self.blocksize
        samplerate = self.samplerate

        out_buffer = []
        for i in range(blocksize):
            phase_increment = 2 * math.pi * input[0][i] / samplerate
            sample = math.sin(self.phase)
            out_buffer.append(sample)
            self.phase += phase_increment
            if self.phase > 2 * math.pi:
                self.phase -= 2 * math.pi
        out_tuple = tuple(out_buffer)
        return out_tuple

    def dsp(self, sr, blocksize, inchans):
        self.samplerate = sr
        self.blocksize = blocksize
        self.inchans = inchans
        return True
